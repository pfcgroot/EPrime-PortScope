[WARNING]
WARNING: DO NOT EDIT THIS FILE DIRECTLY!
Use only E-Studio to edit this file.
Editing of this file from any other means is not supported
and may corrupt the experiment design specification.
Technical support will not be able to address any issue in
regards to this file format.

[Experiment]
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=94
_VersionPersist=6
Root="SessionProc"
Author="Paul Groot - AMC Amsterdam - The Netherlands"
Abstract=""
Notes=""
Creation=1235490699

[Device0]
_VersionPersist=1
OpenDevice=1
Width=1024
Height=768
Bpp=16
Name="Display"
Class="Display"

[Device1]
_VersionPersist=1
OpenDevice=0
Channels=2
Samples=22050
Bps=16
Name="Sound"
Class="Sound"

[Device2]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
CapsLock=0
NumLock=1
Name="Keyboard"
Class="Keyboard"

[Device3]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
OpenMode=0
ShowCursor=0
Name="Mouse"
Class="Mouse"

[DataFile]
WarnBeforeOverwrite=1
WarnIfConvertFailed=1
RemoveERecoveryFile=0
ReceiveFeedbackDuringDataFileConversion=1
LogLevel(2).Name="Block"
LogLevel(3).Name="Trial"
LogLevel(4).Name="SubTrial"
LogLevel(5).Name="LogLevel5"
LogLevel(6).Name="LogLevel6"
LogLevel(7).Name="LogLevel7"
LogLevel(8).Name="LogLevel8"
LogLevel(9).Name="LogLevel9"
LogLevel(10).Name="LogLevel10"

[StartupInfo]
DisplaySummary=0
UseDefaults=0

[StartupInfo1]
Name="Subject"
Prompt="Please enter the Subject Number (1-32767, 0=No Data Logging):"
DataType=0
Enabled=1
PromptEnabled=0
Default="0"
Min=0
Max=32767
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo2]
Name="Session"
Prompt="Please enter the Session Number (1-32767):"
DataType=0
Enabled=1
PromptEnabled=0
Default="1"
Min=1
Max=32767
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo3]
Name="Group"
Prompt="Please enter Subject's Group (0-32767):"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[StartupInfo4]
Name="Name"
Prompt="Please enter Subject's Name:"
DataType=1
Enabled=0
PromptEnabled=0
Default=""
MaxLength=255

[StartupInfo5]
Name="Age"
Prompt="Please enter Subject's Age (0-150):"
DataType=0
Enabled=0
PromptEnabled=0
Default="0"
Min=0
Max=150

[StartupInfo6]
Name="Sex"
Prompt="Please enter Subject's Sex:"
DataType=2
Enabled=0
PromptEnabled=0
Default="male"
Choice(1).Value="male"
Choice(2).Value="female"

[StartupInfo7]
Name="Handedness"
Prompt="Enter Subject's Handedness:"
DataType=2
Enabled=0
PromptEnabled=0
Default="left"
Choice(1).Value="left"
Choice(2).Value="right"

[StartupInfo8]
Name="ResearcherID"
Prompt="Please enter Researcher's ID:"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[StartupInfo9]
Name="IoPort"
Prompt="Which IO Port?"
DataType=2
Enabled=0
PromptEnabled=1
Default="LPT1, ACK"
Choice(1).Value="LPT1, ACK"
Choice(2).Value="COM1, DSR"

[Object0]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="OpenIoPort;Splash;RunScope;CloseIoPort"
_VersionPersist=1
FlowLines(0).Count=4
FlowLines(0).FlowItem(0).Name="OpenIoPort"
FlowLines(0).FlowItem(1).Name="Splash"
FlowLines(0).FlowItem(2).Name="RunScope"
FlowLines(0).FlowItem(3).Name="CloseIoPort"
LogData=1
Name="SessionProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object1]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="Dim cnvs As Canvas\nSet cnvs = Display.Canvas\nDim sw As Integer\nDim sh As Integer\nDim x As Integer\nDim xPrev As Integer\nDim xErased As Integer\nDim y As Integer\nDim value as Single\nDim r As Rect\nDim nChannels As Integer\nDim iTriggerChannel as Integer\nDim fTriggerThreshold as Single\nDim bFallingTrigger as Single\nDim lTriggerOnset as Long\nDim s as String\nDim tw&, th&\n\nConst OUTPUT_PORT% = &H378 ' set to non-zero value to send a trigger\n\nConst ERASE_DX% = 50\nConst MAX_CHANNELS% = 8\n\n' optional trigger\niTriggerChannel = 0     ' set to zero to disable trigger\nfTriggerThreshold = 0   '\nbFallingTrigger = false\n\n' y' = a.y + b\nDim a(1 to MAX_CHANNELS%) as single\nDim b(1 to MAX_CHANNELS%) as single\nDim yPrev(1 to MAX_CHANNELS%)\ndim iChannel as integer\nfor iChannel=1 to MAX_CHANNELS\n\ta(iChannel) = -1 ' y goes positive down\n\tb(iChannel) = 0\nnext\n\nsw = Display.Xres\nsh = Display.Yres\n\ncnvs.PenWidth = 0\ncnvs.PenColor = CColor(\"0,0,255\")\ncnvs.FillColor = CColor(\"yellow\")\n\nDim background As Canvas\nSet background = Display.CreateCanvas\t\t\n\n\nr.Top = 0\nr.Bottom = sh-1\n\nbackground.PenWidth = 0\nbackground.PenColor = CColor(\"192,192,192\")\n' baselines for all channels\nnChannels=1\nfor iChannel=1 to nChannels\n\tb(iChannel) = ((iChannel-0.5)*sh)/nChannels\n\tbackground.Line 0, b(iChannel), sw-1, b(iChannel)\nnext\n' vertical grid lines on background\nDim iGrid as Integer\nDim dGrid as Integer\nConst nGrid% = 4\ndGrid = sw/nGrid\nfor iGrid=1 to nGrid-1\n\tx = iGrid*dGrid\n\tbackground.Line x, 0, x, sh-1\nnext\n\nDo\n\txPrev = 0\n\txErased = 0\n\n\tif iTriggerChannel>0 And iTriggerChannel<=nChannels then\n\t\tif bFallingTrigger then\n\t\t\tDo\n\t\t\tLoop while Not MustStop() And GetSample(iTriggerChannel)<=fTriggerThreshold\n\t\t\tDo\n\t\t\tLoop while Not MustStop() And GetSample(iTriggerChannel)>fTriggerThreshold\n\t\telse\n\t\t\tDo\n\t\t\tLoop while Not MustStop() And GetSample(iTriggerChannel)>=fTriggerThreshold\n\t\t\tDo\n\t\t\tLoop while Not MustStop() And GetSample(iTriggerChannel)<fTriggerThreshold\n\t\tend if\n\tend if\n\tlTriggerOnset = Clock.Read\n\n\tFor x=0 to sw-1\n\t\tif x>=xErased then\n\t\t\t' erase some area just before the 'cursor'\n\t\t\tr.Left = xErased\n\t\t\tr.Right = x+ERASE_DX%\n\t\t\tif r.Right>=sw then r.Right=sw-1\n\t\t\txErased = r.Right\n\t\t\tif r.Left<>r.Right then cnvs.Copy background, r, r\n\t\tend if\n\t\tfor iChannel=1 to nChannels\n\t\t\tvalue = GetSample(iChannel)\n\t\t\ty = a(iChannel)*value + b(iChannel)\n\t\t\tcnvs.Line xPrev, yPrev(iChannel), x, y\n\t\t\tif (x mod 250) = 0 then ' update value at left side onze in a while\n\t\t\t\ts = value\n\t\t\t\tcnvs.CalculateTextSize s, tw, th\n\t\t\t\tcnvs.Text 0, y-th, s\n\t\t\tend if\n\t\t\tyPrev(iChannel) = y\n\t\tnext\n\t\txPrev = x\n\t\t' check is we are 'at' a vertical grid line\n\t\tif (x mod dGrid)=0 then\n\t\t\ts = Clock.Read() - lTriggerOnset\n\t\t\tcnvs.CalculateTextSize s, tw, th\n\t\t\tcnvs.Text x-tw, sh-th, s\n\t\tend if\n\n\t\t' optional signal generation\n\t\tif OUTPUT_PORT%>0 then\n\t\t\tif (x=10) then WritePort OUTPUT_PORT%, 1\n'\t\t\tSleep(1)\n\t\t\tif (x=20) then WritePort OUTPUT_PORT%, 0 \n\t\tend if\n'sleep 1\n\tNext\n'sleep 500\nLoop while Not MustStop()\n"
Name="RunScope"
TypeName="InLine"
Tag=""
Notes=""

[Object2]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="Paul's tiny IO port oscilloscope\n(tracking the status of the selected input line)\n\n\npress any key to start.\n\npress Ctrl-Shift to stop.\n\n\n\n\n\n\n(c) 2008-2010 - Academic Medical Centre Amsterdam - Radiology"
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="-1"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Splash"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data0]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ANY}"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object3]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data1
_VersionPersist=1
Duration="0"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=0
OffsetSync=0
Name="RespDef"
TypeName="Wait"
Tag=""
Notes=""

[Data1]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ANY}"
CorrectInput=""
TimeLimit="-1"
MaxCount="1"
InputAction=0
SyncOwnerDuration=0
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="No"

[Object4]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' Open a port selection dialog and prepare the selected port\n\nIf Not c.AttribExists(\"IoPort\") Then c.SetAttrib \"IoPort\", \"LPT1, ACK\"\n\n' Determine if StartupInfo.UseDefaults exists and is True/False to override prompts for StartupInfo parameters\nDim bStartupInfoUseDefaults As Boolean\nbStartupInfoUseDefaults = False\nIf c.AttribExists(\"StartupInfo.UseDefaults\") Then bStartupInfoUseDefaults = CLogical(c.GetAttrib(\"StartupInfo.UseDefaults\"))\nIf Not bStartupInfoUseDefaults Then\n\tDim vAnswer As Variant\n\tDim arrayChoicesIoPort(3)\n\tarrayChoicesIoPort(0) = \"LPT1, ACK\"\n\tarrayChoicesIoPort(1) = \"COM1, DSR\"\n\tarrayChoicesIoPort(2) = \"COM2, DSR\"\n\tvAnswer = SelectBox(, \"Which IO Port?\", arrayChoicesIoPort)\n\tIf vAnswer >= 0 then\n\t\tc.SetAttrib \"IoPort\", arrayChoicesIoPort(vAnswer)\n\tElse\n\t\tExit sub\n\tEnd If\nEnd If\n\n'-----------------------------------------------------------------------------------\n' Parallel Printer Port (LPT)\n'\n' Pin No (D-Type 25) Pin No (Centronics) SPP Signal In/out Register \n'   1                  1                 nStrobe    In/Out  Control HardwareInverted\n'   2                  2                 Data 0      Out     Data   \n'   3                  3                 Data 1      Out     Data   \n'   4                  4                 Data 2      Out     Data   \n'   5                  5                 Data 3      Out     Data   \n'   6                  6                 Data 4      Out     Data   \n'   7                  7                 Data 5      Out     Data   \n'   8                  8                 Data 6      Out     Data   \n'   9                  9                 Data 7      Out     Data   \n'  10                 10                 nAck         In    Status   \n'  11                 11                 Busy         In    Status  HardwareInverted\n'  12                 12                 Paper-Out    In    Status   \n'  13                 13                 Select       In    Status   \n'  14                 14                 Auto-LF   In/Out   Control HardwareInverted\n'  15                 32                 Error        In    Status   \n'  16                 31                 Init      In/Out   Control   \n'  17                 36                 Select    In/Out   Control HardwareInverted\n'  18 - 25            19-30              Ground      Gnd     \n'\n' LPT Base + 1 Status Port Read Only \n' Bit 7 Busy \n' Bit 6 Ack \n' Bit 5 Paper Out \n' Bit 4 Select In \n' Bit 3 Error \n' Bit 2 IRQ (Not) \n' Bit 1 Reserved \n' Bit 0 Reserved \n'\n' LPT Base + 2 Control Port Read/Write \n' Bit 7 Unused \n' Bit 6 Unused \n' Bit 5 Enable Bi-Directional Port \n' Bit 4 Enable IRQ Via Ack Line \n' Bit 3 Select Printer \n' Bit 2 Initialize Printer (Reset) \n' Bit 1 Auto Linefeed \n' Bit 0 Strobe \n'\n'----------------------------------------------------------------------------\n' RS232 PORT\n' Name\tBaseAdr\tIRQ\t\n' COM 1\t3F8\t\t4\n' COM 2\t2F8\t\t3\n' COM 3\t3E8\t\t4\n' COM 4\t2E8\t\t3\n'Modem Status Register (MSR) is on BASE address + 6\n'Bit\tNotes\n'Bit 7\tCarrier Detect\n'Bit 6\tRing Indicator\n'Bit 5\tData Set Ready  (DSR is used with Siemens trigger box in RS232 mode)\n'Bit 4\tClear To Send\n'Bit 3\tDelta Data Carrier Detect\n'Bit 2\tTrailing Edge Ring Indicator\n'Bit 1\tDelta Data Set Ready\n'Bit 0\tDelta Clear to Send\n\nSelect Case c.GetAttrib(\"IoPort\")\nCase \"LPT1, ACK\"\n\tIoPort% = &H378 + 1\n\tIoMask% = &H40  ' ACK = pin 10 = bit 6\nCase \"COM1, DSR\"\n\tIoPort% = &H3F8 + 6\n\tIoMask% = &H20  ' DSR = pin 6  = bit 5\nCase \"COM2, DSR\"\n\tIoPort% = &H2F8 + 6\n\tIoMask% = &H20  ' DSR = pin 6  = bit 5\nCase Else\n\tDebug.Assert False\nEnd Select\n\n\n' to be able to read the status of the COM ports we must open the device explicitly\nDim SerialDummy As SerialDevice\nDim ComPort as Integer\nif IoPort%>=&H3F8 And IoPort%<=&H3F8+8 then\n\tComPort = 1\nelseif IoPort%>=&H2F8 And IoPort%<=&H2F8+8 then\n\tComPort = 2\nelse\n\tComPort = 0\nend if\nif ComPort>0 then\n\tSet SerialDummy = New SerialDevice\n\tSerialDummy.Name = \"SerialDummy\"\n\n\tDim SerialSerialDeviceInfo As SerialDeviceInfo\n\tSerialSerialDeviceInfo.CommPort = ComPort\n\tSerialSerialDeviceInfo.BaudRate = 9600\n\tSerialSerialDeviceInfo.DataBits = 8\n\tSerialSerialDeviceInfo.Parity = ebParityNo\n\tSerialSerialDeviceInfo.StopBits = ebStopBits1_0\n\n\tSerialDummy.Open SerialSerialDeviceInfo\n\tif SerialDummy.GetState() = ebStateOpen then\n\t\tDebug.Print \"Opened dummy port COM\" & SerialSerialDeviceInfo.CommPort\n\telse\n\t\tMsgBox(\"Couldn't open serial port: COM\" & ComPort)\n\tend if\nend if\n"
Name="OpenIoPort"
TypeName="InLine"
Tag=""
Notes=""

[Object5]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="\nif Not SerialDummy Is Nothing then\n\tif SerialDummy.GetState() = ebStateOpen then\n\t\tSerialDummy.Close\n\tend if\n\tSet SerialDummy = Nothing\nend if\n\n"
Name="CloseIoPort"
TypeName="InLine"
Tag=""
Notes=""

[UserScript]
Dim IoPort%
Dim IoMask%

Function MustStop() as boolean
	MustStop = GetuserBreakState()<>0
End Function



Function GetSample(iChannel as Integer) as Single
'	GetSample = sin(Clock.Read()/10)*100 '+ random(0,50) - 25  ' << insert your own sampling here
' 	GetSample = ReadPort(&H379) ' combination of all LPT inputs
	GetSample = ReadPort(IoPort%) And IoMask%  ' Ack = bit 10 only
End Function

